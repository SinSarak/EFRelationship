// <auto-generated />
using EFRelationship;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EFRelationship.Migrations
{
    [DbContext(typeof(EFContext))]
    partial class EFContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity("EFRelationship.Domain.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Status");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Status = 1,
                            Username = "Account1"
                        },
                        new
                        {
                            Id = 2,
                            Status = 1,
                            Username = "Account2"
                        },
                        new
                        {
                            Id = 3,
                            Status = 1,
                            Username = "Account3"
                        },
                        new
                        {
                            Id = 4,
                            Status = 1,
                            Username = "Account4"
                        });
                });

            modelBuilder.Entity("EFRelationship.Domain.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Category1",
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Category2",
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "Category3",
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
                            Name = "Category4",
                            Status = 1
                        });
                });

            modelBuilder.Entity("EFRelationship.Domain.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccountId");

                    b.Property<string>("Name");

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.HasIndex("AccountId")
                        .IsUnique();

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountId = 1,
                            Name = "Game1",
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            AccountId = 2,
                            Name = "Game2",
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            AccountId = 3,
                            Name = "Game3",
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
                            AccountId = 4,
                            Name = "Game4",
                            Status = 1
                        });
                });

            modelBuilder.Entity("EFRelationship.Domain.GameCategory", b =>
                {
                    b.Property<int>("GameId");

                    b.Property<int>("CategoryId");

                    b.HasKey("GameId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("GameCategories");

                    b.HasData(
                        new
                        {
                            GameId = 1,
                            CategoryId = 1
                        },
                        new
                        {
                            GameId = 1,
                            CategoryId = 2
                        },
                        new
                        {
                            GameId = 1,
                            CategoryId = 3
                        },
                        new
                        {
                            GameId = 2,
                            CategoryId = 1
                        },
                        new
                        {
                            GameId = 2,
                            CategoryId = 2
                        });
                });

            modelBuilder.Entity("EFRelationship.Domain.GameResource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("GameId");

                    b.Property<string>("path");

                    b.Property<string>("type");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("GameResources");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GameId = 1,
                            path = "path1",
                            type = "type1"
                        },
                        new
                        {
                            Id = 2,
                            GameId = 1,
                            path = "path2",
                            type = "type1"
                        },
                        new
                        {
                            Id = 3,
                            GameId = 1,
                            path = "path3",
                            type = "type1"
                        },
                        new
                        {
                            Id = 4,
                            GameId = 2,
                            path = "path4",
                            type = "type1"
                        });
                });

            modelBuilder.Entity("EFRelationship.Domain.Game", b =>
                {
                    b.HasOne("EFRelationship.Domain.Account", "Account")
                        .WithOne("Game")
                        .HasForeignKey("EFRelationship.Domain.Game", "AccountId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EFRelationship.Domain.GameCategory", b =>
                {
                    b.HasOne("EFRelationship.Domain.Category", "Category")
                        .WithMany("GameCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EFRelationship.Domain.Game", "Game")
                        .WithMany("GameCategories")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EFRelationship.Domain.GameResource", b =>
                {
                    b.HasOne("EFRelationship.Domain.Game", "Game")
                        .WithMany("GameResources")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
